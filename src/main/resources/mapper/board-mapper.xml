<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.board_springboot.mapper.BoardMapper">

    <resultMap id="boardVO" type="com.example.board_springboot.domain.BoardVO">
        <result property="id" column="id" javaType="Long" jdbcType="BIGINT"/>
        <result property="category" column="category" javaType="String" jdbcType="VARCHAR"/>
        <result property="password" column="password" javaType="String" jdbcType="VARCHAR"/>
        <result property="title" column="title" javaType="String" jdbcType="VARCHAR"/>
        <result property="content" column="content" javaType="String" jdbcType="VARCHAR"/>
        <result property="writer" column="writer" javaType="String" jdbcType="VARCHAR"/>
        <result property="hit" column="hit" javaType="int" jdbcType="INTEGER"/>
        <result property="fileYN" column="file_yn" javaType="boolean" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--  검색 기능 메서드 따로 차출, T, W, C 짤라서 배열로 foreach문을 돌림.  -->
    <sql id="criteria">
        <trim prefix="where (" suffix=")" prefixOverrides="OR">
            <foreach item='type' collection="typeArr">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            title like concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'W'.toString()">
                            writer like concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            content like concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>

    <!-- 게시글 목록 with 페이징, 검색 -->
<!--    <select id="getAll" resultType="com.example.board_springboot.domain.BoardVO">-->
    <select id="getAll" resultMap="boardVO">
        select * from board
        <if test="keyword != null">
            <include refid="criteria"/>
        </if>
        ORDER BY id DESC
        LIMIT #{startNum}, #{amount}
    </select>

    <!-- 게시글 카운트 with 페이징, 검색   -->
    <select id="totalCount" resultType="int">
        SELECT COUNT(*)
        FROM Board
        <if test="keyword != null">
            <include refid="criteria"/>
        </if>
    </select>

    <!-- 게시글 상세보기 -->
    <select id="get" resultMap="boardVO">
        select *
        from board
        where id = #{id}
    </select>

    <!-- 게시글 상세보기 후 조회수 증가 -->
    <update id="updateHit">
        UPDATE board
        SET hit=hit + 1
        where id = #{id}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="remove">
        delete
        from board
        where id = #{id}
    </delete>

    <!-- 게시글 수정  -->
    <update id="modify">
        UPDATE Board
        SET title=#{title},
            content=#{content},
            writer=#{writer},
            updated_at=NOW()
        WHERE id = #{id}
    </update>

    <!--  게시글 등록  -->
    <insert id="register">
        INSERT INTO board (id, category, password, title, content, writer, created_at)
        values (null, #{category}, #{password}, #{title}, #{content}, #{writer}, NOW())
    </insert>

    <!--  board insert 후 boardId 리턴  -->
    <!--  selectKey 리턴값은 parameterType에 넘겨준 객체에 넘어간다 BoardVO-->
    <insert id="registerWithSelectKey" parameterType="com.example.board_springboot.domain.BoardVO">

<!--        <selectKey keyProperty="id" resultType="long" order="BEFORE">-->
<!--            SELECT MAX(id)+1 FROM board-->
<!--        </selectKey>-->

        INSERT INTO board (id, category, password, title, content, writer, created_at)
        values (#{id}, #{category}, #{password}, #{title}, #{content}, #{writer}, NOW())

        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

    </insert>

    <!-- 카테고리 목록  -->
    <select id="getCategoryList" resultType="String">
        SELECT name FROM category
        GROUP BY name
        ORDER BY name
    </select>

    <!--  게시글 패스워드 리턴  -->
    <select id="findPassword" resultType="String">
        select password from board
        where id = #{boardId}
    </select>

    <!--  게시글 파일유무 true 등록 -->
    <select id="registerFileYN">
        update board
        set file_yn = 1
        where id = #{boardId}
    </select>

    <!--  게시글 파일유무 false 등록 -->
    <select id="removeFileYN">
        update board
        set file_yn = 0
        where id = #{boardId}
    </select>

    <!--  게시글 중복 검증  -->
    <select id="getCount" resultType="integer">
        SELECT COUNT(*) FROM
            board
        WHERE id =#{boardId}
    </select>


</mapper>
